angular.module("toaster",[]),angular.module("toaster").controller("toasterCtrl",function(r,e){return r.toasters=e.toasters,r.dismissAll=function(r){var e,t,n,s;for(n=[],e=0,t=r.length;t>e;e++)s=r[e],n.push(s.promise.reject());return n}}),angular.module("toaster").service("toasterCatchService",function(r,e){return function(t){var n,s,o,a,u;if(null!=(null!=(a=t.data)?a.errors:void 0))for(u=t.data.errors,s=0,o=u.length;o>s;s++)n=u[s],n.message&&r.error(n.message);return e.reject(t)}}),angular.module("toaster").service("toasterService",function(r,e){var t,n,s,o;return o={success:[],error:[]},s=4e3,n=8e3,t=function(t,n,s,a){var u,c,l;return c=r.defer(),l={promise:c,type:t,message:n,call_to_action:s},u=function(){return _.contains(o[t],l)?c.reject():void 0},a&&e(u,a),o[t].unshift(l),c.promise["finally"](function(){return _.pull(o[t],l)}),c.promise.close=u,c.promise},{success:function(r,e){var o;return o=e?n:s,t("success",r,e,o)},fixed:function(r,e){return t("success",r,e)},error:function(r,e){return t("error",r,e)},addListener:function(r){return callbacks.push(r)},removeListener:function(r){return _.pull(callbacks,r)},broadcastChange:function(){var r,e,t,n;for(n=[],e=0,t=callbacks.length;t>e;e++)r=callbacks[e],n.push(callbacks());return n},toasters:o}});